{"ast":null,"code":"import React,{useState}from\"react\";import\"./styles/ChatBot.css\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const ChatBot=()=>{const[messages,setMessages]=useState([]);const[input,setInput]=useState(\"\");const[isChatOpen,setIsChatOpen]=useState(false);const handleSendMessage=()=>{if(input.trim()===\"\")return;const newMessages=[...messages,{sender:\"user\",text:input},{sender:\"bot\",text:\"Все операторы пока заняты...\"}];setMessages(newMessages);setInput(\"\");};const toggleChat=()=>{setIsChatOpen(!isChatOpen);console.log(\"Chat open state:\",!isChatOpen);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:`chat-container ${isChatOpen?\"open\":\"\"}`,children:[/*#__PURE__*/_jsx(\"div\",{className:\"chat-box\",children:messages.map((message,index)=>/*#__PURE__*/_jsx(\"div\",{className:`message ${message.sender}`,children:message.text},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-input\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:input,onChange:e=>setInput(e.target.value),placeholder:\"\\u0417\\u0430\\u0434\\u0430\\u0439\\u0442\\u0435 \\u0432\\u0430\\u0448 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441...\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSendMessage,children:\"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:`chat-toggle ${isChatOpen?\"open\":\"\"}`,onClick:toggleChat})]});};export default ChatBot;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ChatBot","messages","setMessages","input","setInput","isChatOpen","setIsChatOpen","handleSendMessage","trim","newMessages","sender","text","toggleChat","console","log","children","className","map","message","index","type","value","onChange","e","target","placeholder","onClick"],"sources":["C:/Users/akiev/Desktop/fitness/fitness-site/src/ChatBot.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./styles/ChatBot.css\";\r\n\r\nconst ChatBot = () => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [input, setInput] = useState(\"\");\r\n    const [isChatOpen, setIsChatOpen] = useState(false);\r\n\r\n    const handleSendMessage = () => {\r\n        if (input.trim() === \"\") return;\r\n\r\n        const newMessages = [\r\n            ...messages,\r\n            { sender: \"user\", text: input },\r\n            { sender: \"bot\", text: \"Все операторы пока заняты...\" },\r\n        ];\r\n        setMessages(newMessages);\r\n        setInput(\"\");\r\n    };\r\n\r\n    const toggleChat = () => {\r\n        setIsChatOpen(!isChatOpen);\r\n        console.log(\"Chat open state:\", !isChatOpen);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className={`chat-container ${isChatOpen ? \"open\" : \"\"}`}>\r\n                <div className=\"chat-box\">\r\n                    {messages.map((message, index) => (\r\n                        <div\r\n                            key={index}\r\n                            className={`message ${message.sender}`}\r\n                        >\r\n                            {message.text}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"chat-input\">\r\n                    <input\r\n                        type=\"text\"\r\n                        value={input}\r\n                        onChange={(e) => setInput(e.target.value)}\r\n                        placeholder=\"Задайте ваш вопрос...\"\r\n                    />\r\n                    <button onClick={handleSendMessage}>Отправить</button>\r\n                </div>\r\n            </div>\r\n            <div\r\n                className={`chat-toggle ${isChatOpen ? \"open\" : \"\"}`}\r\n                onClick={toggleChat}\r\n            ></div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ChatBot;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,sBAAsB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAE9B,KAAM,CAAAC,OAAO,CAAGA,CAAA,GAAM,CAClB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACU,KAAK,CAAEC,QAAQ,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACY,UAAU,CAAEC,aAAa,CAAC,CAAGb,QAAQ,CAAC,KAAK,CAAC,CAEnD,KAAM,CAAAc,iBAAiB,CAAGA,CAAA,GAAM,CAC5B,GAAIJ,KAAK,CAACK,IAAI,CAAC,CAAC,GAAK,EAAE,CAAE,OAEzB,KAAM,CAAAC,WAAW,CAAG,CAChB,GAAGR,QAAQ,CACX,CAAES,MAAM,CAAE,MAAM,CAAEC,IAAI,CAAER,KAAM,CAAC,CAC/B,CAAEO,MAAM,CAAE,KAAK,CAAEC,IAAI,CAAE,8BAA+B,CAAC,CAC1D,CACDT,WAAW,CAACO,WAAW,CAAC,CACxBL,QAAQ,CAAC,EAAE,CAAC,CAChB,CAAC,CAED,KAAM,CAAAQ,UAAU,CAAGA,CAAA,GAAM,CACrBN,aAAa,CAAC,CAACD,UAAU,CAAC,CAC1BQ,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAE,CAACT,UAAU,CAAC,CAChD,CAAC,CAED,mBACIR,KAAA,CAAAE,SAAA,EAAAgB,QAAA,eACIlB,KAAA,QAAKmB,SAAS,CAAE,kBAAkBX,UAAU,CAAG,MAAM,CAAG,EAAE,EAAG,CAAAU,QAAA,eACzDpB,IAAA,QAAKqB,SAAS,CAAC,UAAU,CAAAD,QAAA,CACpBd,QAAQ,CAACgB,GAAG,CAAC,CAACC,OAAO,CAAEC,KAAK,gBACzBxB,IAAA,QAEIqB,SAAS,CAAE,WAAWE,OAAO,CAACR,MAAM,EAAG,CAAAK,QAAA,CAEtCG,OAAO,CAACP,IAAI,EAHRQ,KAIJ,CACR,CAAC,CACD,CAAC,cACNtB,KAAA,QAAKmB,SAAS,CAAC,YAAY,CAAAD,QAAA,eACvBpB,IAAA,UACIyB,IAAI,CAAC,MAAM,CACXC,KAAK,CAAElB,KAAM,CACbmB,QAAQ,CAAGC,CAAC,EAAKnB,QAAQ,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC1CI,WAAW,CAAC,uGAAuB,CACtC,CAAC,cACF9B,IAAA,WAAQ+B,OAAO,CAAEnB,iBAAkB,CAAAQ,QAAA,CAAC,wDAAS,CAAQ,CAAC,EACrD,CAAC,EACL,CAAC,cACNpB,IAAA,QACIqB,SAAS,CAAE,eAAeX,UAAU,CAAG,MAAM,CAAG,EAAE,EAAG,CACrDqB,OAAO,CAAEd,UAAW,CAClB,CAAC,EACT,CAAC,CAEX,CAAC,CAED,cAAe,CAAAZ,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}